trigger:
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'BackEndChallenge-SVC'
  appName: 'CustomerAppFunction'
  resourceGroupName: 'az-backendchallengetest0-rg'
  location: 'Australia Southeast'
  functionAppName: 'CustomerAppFunction'
  dotnetVersion: '6.0.x'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk $(dotnetVersion)'
  inputs:
    packageType: sdk
    version: $(dotnetVersion)
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: restore
    projects: '**/*.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: build
    projects: '**/*.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Publish'
  inputs:
    command: publish
    projects: '**/*.csproj'
    publishWebProjects: false
    arguments: '--configuration Release --output $(Build.ArtifactStagingDirectory)'
    
- task: ArchiveFiles@2
  displayName: 'Archive'
  inputs:
    rootFolderOrFile: '$(Build.ArtifactStagingDirectory)'
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: AzureFunctionApp@1
  displayName: 'Azure Function App Deploy'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: 'functionApp'
    appName: $(appName)
    package: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    resourceGroupName: $(resourceGroupName)
    deploymentMethod: 'zipDeploy'
    deploymentSlotSetting: 'production'
    removeAdditionalFilesFlag: true
    deploymentEndpointSelector: 'Auto'
    enableCustomDeployment: true
    deploymentSlotsEnabled: true
    deploymentSlot: 'production'
    virtualApplication: '/'
    takeAppOfflineFlag: true
